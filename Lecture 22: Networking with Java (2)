1. Reading contents from an HTML File
  - file을 읽는 것과 마찬가지로 URL를 읽을 수 있다. 
  - URL의 instance method중에서 openStream method를 사용한다. openStream은 URL으로부터 InputStrean를 읽어 온다. url.openStream()은 inputStream를 리턴하고 그리고 inputstreamReader의 
  constructor의 argument로 들어오고 다시 inputstreamReader의 instance는 bufferedReader의 constructor의 argument가 된다. 
  - BufferedReader을 사용하는 이유는 BufferedReader의 instance method인 readLine 때문이다. 따라서 textfile에 자주 사용된다. 
  
2. Downloading a file from URL
  - 앞에와 동일하게 openStream으로 inputstream를 리턴받고 동시에 outputstream를 생성한다. 그리고 inputstream의 read instance method를 통해서 읽고 outputstream의 write instance method를 
  통해서 쓴다. 
  
3. Parsing an HTML File: 우리가 html파일을 읽을때는 tag는 중요하지 않고 데이터가 중요하기에 paring해야 한다. 따라서 Read하는 것은 동일한데, 한줄씩 읽으면서(readLine)에서 어떠한 작업을
수행해야 한다. 
  - trim을 하면 공백을 삭제한다. length는 길이니깐 공백을 삭제했을떄 아무것도 없는 줄은 lines arraylist에 추가하지 않는다. 따라서 이렇게 읽고나서 for문을 통해서 우리가 원하는 정보를 
  읽는다. 우리가 원하는 정보가 어떤 tag에 어떻게 싸여져 있는지 확인하여 if문으로 
  
4. Parsing an HTML file using jsoup
  - jsoup: an external java library 
  - Jsoup 의 static method인 connect(url).get()를 사용하면 html file를 Read할 수 있다. 그리고 Jsoup안에 있는 type인 Document type의 instance variable인 select를 사용하여 찾고싶은 태그를
  적는다. 예로들어, div.class="detail" 을 찾을 것이다. 중요한 점은, div.class="detail"가 아니라 "div.detail"라고 해야 한다. 왠지 모르겠지만 class는 생략한다. 
  그 다음엔 <div class="detail">안에는 <div class="title">이 있기 때문에 bestsellers.select(div.title)라고 하여서 해당 block를 얻는다. 그 다음엔 titles.selct("a[href]")를 하여 a
  태그의 href options에 해당하는 block를 가져온다. 
  
  자세하게 살펴보자면, 
  1. Connect to a URL using Jsoup.connect method: connection object를 리턴해주는데, conncection class는 get method를 가지는데, Document Object를 리턴해준다. Document는 Element의 
  sub class이다. 
  2. Element의 select method는 HTML file에서 data를 추출하는 method이다. Document는 Element의 subclass이므로 이 select method를 사용할 수 있고,
    - select("div.detail")은 <div class="detail">로 시작하는 부분을 찾는다. 
    - select("div.title")은 <div class="title">로 시작하는 부분을 찾는다. 
    - select("a[hef]")은 <a href=...>로 시작하는 부분을 찾는다. attribute는 []로 나타낸다. 
    
<Programming Lab#1>
HTML file를 읽는데 JAVA안의 내부 라이브러리를 사용한 것이다. 중요한 점은 URL object를 생성하고 openStream를 이용하여 inputStream를 만든다. 그리고 inputstreamReader를 통해서 object를 생성
하고 BufferedReader을 통해서 한줄 씩 읽는다. 

<Programming Lab#2>
HTML file을 download하는 부분이다. openStream()을 통해 inputStream를 받고 in.read()함수를 사용하여 읽은 파일을 outputStream에 write한다. 
    
<Programming Lab#3>
HTML file를 parsing하는 작업이며, read에서 두가지 작업을 수행하는데 기본적으로 아무것도 없는 line은 입력받지 않는다. 그리고 String함수들을 이용해서 우리가 원하는 정보들을 얻는다. 

<Programming Lab#4>
jsoup를 이용하여 parsing한다. 
